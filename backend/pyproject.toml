[project]
name = "app"
version = "0.1.0"
description = ""
requires-python = ">=3.10,<4.0"
dependencies = [
    # Updated FastAPI to latest version (0.116.1) - supports Python 3.13
    "fastapi[standard]>=0.116.0,<1.0.0",
    
    # Updated dependencies with latest compatible versions
    "python-multipart>=0.0.12,<1.0.0",
    "email-validator>=2.2.0,<3.0.0",
    "passlib[bcrypt]>=1.7.4,<2.0.0",
    "tenacity>=9.0.0,<10.0.0",
    
    # Updated Pydantic to latest (2.11.7)
    "pydantic>=2.11.0,<3.0.0",
    
    "emails>=0.6,<1.0",
    "jinja2>=3.1.4,<4.0.0",
    "alembic>=1.14.0,<2.0.0",
    "httpx>=0.27.0,<1.0.0",
    "psycopg[binary]>=3.2.0,<4.0.0",
    "sqlmodel>=0.0.22,<1.0.0",
    "asyncpg>=0.28.0,<1.0.0",
    
    # Pin bcrypt until passlib supports the latest
    "bcrypt==4.0.1",
    
    # Updated Pydantic Settings to latest (2.10.1)
    "pydantic-settings>=2.10.0,<3.0.0",
    
    "sentry-sdk[fastapi]>=2.0.0,<3.0.0",
    "pyjwt>=2.9.0,<3.0.0",
    
    # Force newer httptools version for Python 3.13 compatibility
    "httptools>=0.6.4,<1.0.0",
]

[tool.uv]
dev-dependencies = [
    "pytest>=8.0.0,<9.0.0",
    "mypy>=1.13.0,<2.0.0",
    "ruff>=0.8.0,<1.0.0",
    "pre-commit>=4.0.0,<5.0.0",
    "types-passlib>=1.7.7.20240311,<2.0.0",
    "coverage>=7.6.0,<8.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true