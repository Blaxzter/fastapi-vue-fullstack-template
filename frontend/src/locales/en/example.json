{
  "dialogExamples": {
    "title": "Dialog Examples",
    "cards": {
      "basicConfirm": {
        "title": "Basic Confirm",
        "description": "Simple confirmation dialog",
        "button": "Show Confirm Dialog"
      },
      "customConfirm": {
        "title": "Custom Confirm",
        "description": "Confirmation with custom text and icons",
        "button": "Show Custom Confirm"
      },
      "destructiveConfirm": {
        "title": "Destructive Confirm",
        "description": "Dangerous action confirmation",
        "button": "Delete Item"
      },
      "alert": {
        "title": "Alert Dialog",
        "description": "Simple alert message",
        "button": "Show Alert"
      },
      "info": {
        "title": "Info Dialog",
        "description": "Informational dialog",
        "button": "Show Info"
      },
      "quickConfirm": {
        "title": "Quick Confirm",
        "description": "Using string-only syntax",
        "button": "Quick Confirm"
      }
    },
    "result": {
      "title": "Last Result:",
      "confirmed": "User confirmed",
      "cancelled": "User cancelled"
    },
    "dialogs": {
      "basicConfirm": {
        "text": "Are you sure you want to proceed with this action?"
      },
      "customConfirm": {
        "title": "Custom Confirmation",
        "text": "This action will save your changes. Do you want to continue?",
        "confirmText": "Save Changes",
        "cancelText": "Keep Editing"
      },
      "destructiveConfirm": {
        "title": "Delete Item",
        "text": "This action cannot be undone. Are you sure you want to delete this item?",
        "confirmText": "Delete",
        "successMessage": "Item has been deleted successfully!"
      },
      "alert": {
        "title": "Important Notice",
        "text": "Your changes have been saved successfully."
      },
      "info": {
        "text": "This is some useful information for the user."
      },
      "quickConfirm": {
        "text": "Do you want to continue?"
      }
    }
  },
  "examplesOverview": {
    "title": "Examples Overview",
    "description": "Explore various examples and demonstrations of the application's features.",
    "examples": {
      "apiExample": {
        "title": "API Example",
        "description": "Demonstrates API integration and data fetching patterns."
      },
      "breadcrumbExamples": {
        "title": "Breadcrumb Examples",
        "description": "Shows different breadcrumb navigation patterns and configurations."
      },
      "layoutDemo": {
        "title": "Layout Demo",
        "description": "Explores various layout options and responsive design patterns."
      },
      "dialogExamples": {
        "title": "Dialog Examples",
        "description": "Interactive examples of confirmation dialogs, alerts, and info messages."
      }
    }
  },
  "layoutDemo": {
    "title": "Layout System Demo",
    "description": "This page demonstrates the nested route layout system. Notice how the navigation and breadcrumbs are provided by the PostAuth layout.",
    "currentLayout": {
      "title": "Current Layout: PostAuth",
      "route": "Route:",
      "layoutComponent": "Layout Component:",
      "features": "Features:",
      "featuresList": {
        "sidebarNavigation": "Sidebar navigation",
        "breadcrumbNavigation": "Breadcrumb navigation",
        "userMenu": "User menu in sidebar",
        "responsiveLayout": "Responsive layout"
      }
    },
    "navigationExamples": {
      "title": "Navigation Examples",
      "landingPage": {
        "button": "Go to Landing Page (PreAuth Layout)",
        "description": "Will show simple header without sidebar"
      },
      "notFound": {
        "button": "Go to 404 (Minimal Layout)",
        "description": "Clean page with no navigation"
      },
      "settings": {
        "button": "Go to Settings (PostAuth Layout)",
        "description": "Same layout as current page"
      }
    },
    "benefits": {
      "title": "Layout Benefits",
      "urlStructure": "URL Structure: Layout is clear from the URL path",
      "cleanApp": "Clean App.vue: No layout logic in the main component",
      "seoFriendly": "SEO Friendly: Clear hierarchy for search engines",
      "layoutIsolation": "Layout Isolation: Each layout is self-contained",
      "easyNavigation": "Easy Navigation: Users understand where they are"
    }
  },
  "breadcrumbExamples": {
    "title": "Dynamic Breadcrumb Examples",
    "description": "This page demonstrates different ways to use dynamic breadcrumbs.",
    "staticOverride": {
      "title": "Static Override",
      "description": "Breadcrumb is set statically when the component mounts.",
      "button": "Set Static Breadcrumb"
    },
    "dynamicFromData": {
      "title": "Dynamic from Data",
      "description": "Breadcrumb changes based on user selection.",
      "selectCategory": "Select a category:",
      "selectItem": "Select an item:",
      "choose": "Choose...",
      "categories": {
        "electronics": "Electronics",
        "clothing": "Clothing",
        "books": "Books"
      },
      "items": {
        "laptop": "Laptop",
        "phone": "Smartphone",
        "tablet": "Tablet",
        "shirt": "T-Shirt",
        "jeans": "Jeans",
        "jacket": "Jacket",
        "fiction": "Fiction",
        "technical": "Technical",
        "biography": "Biography"
      }
    },
    "resetToDefault": {
      "title": "Reset to Default",
      "description": "Reset breadcrumb back to route meta definition.",
      "button": "Reset to Route Default"
    },
    "addBreadcrumb": {
      "title": "Add Breadcrumb",
      "description": "Add additional breadcrumb items dynamically.",
      "placeholder": "Breadcrumb title",
      "button": "Add"
    },
    "breadcrumbItems": {
      "home": "Home",
      "examples": "Examples",
      "breadcrumbExamples": "Breadcrumb Examples",
      "staticExample": "Static Example"
    }
  },
  "apiExample": {
    "title": "API Example & Documentation",
    "description": "This example demonstrates how to use the useAuthenticatedClient composable to make authenticated API calls and work with auto-generated Zod schemas.",
    "useAuthenticatedClient": {
      "title": "üîê useAuthenticatedClient",
      "description": "A composable that provides an authenticated HTTP client with automatic error handling and token management.",
      "keyFeatures": "Key Features:",
      "features": {
        "automaticToken": "Automatic Bearer token injection",
        "errorHandling": "Comprehensive error handling",
        "typeSafe": "Type-safe API calls",
        "auth0Integration": "Auth0 integration"
      },
      "usage": "Usage:"
    },
    "apiClientGeneration": {
      "title": "‚ö° API Client Generation",
      "description": "Auto-generate TypeScript types and Zod schemas from your FastAPI OpenAPI specification.",
      "generatedFiles": "Generated Files:",
      "files": {
        "types": "types.gen.ts - TypeScript interfaces",
        "zod": "zod.gen.ts - Zod validation schemas",
        "client": "client.gen.ts - HTTP client methods"
      },
      "generateCommand": "Generate Command:",
      "vscodeTask": "VS Code Task:"
    },
    "liveExample": {
      "title": "üöÄ Live Example",
      "badge": "Try it out!",
      "description": "Submit the form below to see the authenticated API client in action. The form uses Zod validation generated from the backend API schema.",
      "form": {
        "nameLabel": "Name",
        "namePlaceholder": "Enter your name",
        "ageLabel": "Age (optional)",
        "agePlaceholder": "Enter your age",
        "submitButton": "Submit",
        "submittingButton": "Submitting..."
      },
      "codeImplementation": "Code Implementation:"
    },
    "response": {
      "success": "‚úÖ API Response Success",
      "error": "‚ùå API Error"
    },
    "integrationTips": {
      "title": "üí° Tips for API Integration",
      "tips": {
        "regenerateClient": "Run pnpm run generate-client after backend schema changes",
        "vscodeTask": "Use VS Code task \"Update Client\" for quick regeneration",
        "automaticHandling": "The composable handles authentication, errors, and retries automatically",
        "zodValidation": "Zod schemas provide runtime validation matching your backend",
        "typescriptSafety": "TypeScript types ensure compile-time safety"
      }
    }
  }
}
